{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { productListReducer, productReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { loginReducer, registerReducer, userDetailsReducer, userUpdateProfileReducer, listUsersReducer } from \"./reducers/userReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productReducer,\n  cart: cartReducer,\n  login: loginReducer,\n  register: registerReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  listUsers: listUsersReducer\n});\nconst middleware = [thunk];\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst initState = {\n  cart: {\n    cartItems: []\n  }\n};\nconst store = createStore(reducer, initState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/ecommerce-mern/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","thunk","productListReducer","productReducer","cartReducer","loginReducer","registerReducer","userDetailsReducer","userUpdateProfileReducer","listUsersReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","reducer","productList","productDetails","cart","login","register","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","listUsers","middleware","cartItemsFromStorage","localStorage","getItem","JSON","parse","initState","cartItems","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,2BAAnD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,gBALF,QAMO,wBANP;AAOA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,mBAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,yBAPP;AASA,MAAMC,OAAO,GAAGlB,eAAe,CAAC;AAC9BmB,EAAAA,WAAW,EAAEf,kBADiB;AAE9BgB,EAAAA,cAAc,EAAEf,cAFc;AAG9BgB,EAAAA,IAAI,EAAEf,WAHwB;AAI9BgB,EAAAA,KAAK,EAAEf,YAJuB;AAK9BgB,EAAAA,QAAQ,EAAEf,eALoB;AAM9BgB,EAAAA,WAAW,EAAEf,kBANiB;AAO9BgB,EAAAA,iBAAiB,EAAEf,wBAPW;AAQ9BgB,EAAAA,WAAW,EAAEd,kBARiB;AAS9Be,EAAAA,YAAY,EAAEd,mBATgB;AAU9Be,EAAAA,QAAQ,EAAEd,eAVoB;AAW9Be,EAAAA,YAAY,EAAEd,mBAXgB;AAY9Be,EAAAA,WAAW,EAAEd,kBAZiB;AAa9Be,EAAAA,SAAS,EAAEd,gBAbmB;AAc9Be,EAAAA,SAAS,EAAErB;AAdmB,CAAD,CAA/B;AAiBA,MAAMsB,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AAEA,MAAM+B,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,SAAS,GAAG;AAChBlB,EAAAA,IAAI,EAAE;AAAEmB,IAAAA,SAAS,EAAE;AAAb;AADU,CAAlB;AAIA,MAAMC,KAAK,GAAG1C,WAAW,CACvBmB,OADuB,EAEvBqB,SAFuB,EAGvBrC,mBAAmB,CAACD,eAAe,CAAC,GAAGgC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport { productListReducer, productReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport {\n  loginReducer,\n  registerReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  listUsersReducer,\n} from \"./reducers/userReducer\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from \"./reducers/orderReducer\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productReducer,\n  cart: cartReducer,\n  login: loginReducer,\n  register: registerReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  listUsers: listUsersReducer,\n});\n\nconst middleware = [thunk];\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst initState = {\n  cart: { cartItems: [] },\n};\n\nconst store = createStore(\n  reducer,\n  initState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}