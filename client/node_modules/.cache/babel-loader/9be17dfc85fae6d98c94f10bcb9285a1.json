{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { productListReducer, productReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { loginReducer, registerReducer, userDetailsReducer, userUpdateProfileReducer } from \"./reducers/userReducer\";\nimport { orderCreateReducer, orderDetailsReducer } from \"./reducers/orderReducer\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productReducer,\n  cart: cartReducer,\n  login: loginReducer,\n  register: registerReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\nconst middleware = [thunk];\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst initState = {\n  cart: {\n    cartItems: []\n  }\n};\nconst store = createStore(reducer, initState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/media/muhammad/F69DA321B1854FDB/Production/Portfolio/REACT/ecommerce-mern/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","composeWithDevTools","thunk","productListReducer","productReducer","cartReducer","loginReducer","registerReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","reducer","productList","productDetails","cart","login","register","userDetails","userUpdateProfile","orderCreate","orderDetails","middleware","cartItemsFromStorage","localStorage","getItem","JSON","parse","initState","cartItems","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,2BAAnD;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,kBAHF,EAIEC,wBAJF,QAKO,wBALP;AAMA,SACEC,kBADF,EAEEC,mBAFF,QAGO,yBAHP;AAKA,MAAMC,OAAO,GAAGb,eAAe,CAAC;AAC9Bc,EAAAA,WAAW,EAAEV,kBADiB;AAE9BW,EAAAA,cAAc,EAAEV,cAFc;AAG9BW,EAAAA,IAAI,EAAEV,WAHwB;AAI9BW,EAAAA,KAAK,EAAEV,YAJuB;AAK9BW,EAAAA,QAAQ,EAAEV,eALoB;AAM9BW,EAAAA,WAAW,EAAEV,kBANiB;AAO9BW,EAAAA,iBAAiB,EAAEV,wBAPW;AAQ9BW,EAAAA,WAAW,EAAEV,kBARiB;AAS9BW,EAAAA,YAAY,EAAEV;AATgB,CAAD,CAA/B;AAYA,MAAMW,UAAU,GAAG,CAACpB,KAAD,CAAnB;AAEA,MAAMqB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,SAAS,GAAG;AAChBb,EAAAA,IAAI,EAAE;AAAEc,IAAAA,SAAS,EAAE;AAAb;AADU,CAAlB;AAIA,MAAMC,KAAK,GAAGhC,WAAW,CACvBc,OADuB,EAEvBgB,SAFuB,EAGvB3B,mBAAmB,CAACD,eAAe,CAAC,GAAGsB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeQ,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport { productListReducer, productReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport {\n  loginReducer,\n  registerReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n} from \"./reducers/userReducer\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n} from \"./reducers/orderReducer\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productReducer,\n  cart: cartReducer,\n  login: loginReducer,\n  register: registerReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n});\n\nconst middleware = [thunk];\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst initState = {\n  cart: { cartItems: [] },\n};\n\nconst store = createStore(\n  reducer,\n  initState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}